version: "3"
networks:
  services-network:
    driver: bridge
services:
    services-db:
        image: "mcr.microsoft.com/mssql/server:2022-latest"
        container_name: "services-db"
        ports:
            - "1433:1433"
        volumes: 
            - sqlsystem:/var/opt/mssql/
            - sqldata:/var/opt/sqlserver/data
            - sqllog:/var/opt/sqlserver/log
            - sqlbackup:/var/opt/sqlserver/backup
        environment:
            SA_PASSWORD: "dev@1234"
            ACCEPT_EULA: "Y"
        networks:
            - services-network
    rabbitmq-service:
        image: rabbitmq:3-management
        container_name: rabbitmq-service
        ports:
            - 15672:15672
            - 5672:5672
        networks:
            - services-network
    cache-service:
        image: redis:6.2-alpine
        restart: always
        ports:
        - '6379:6379'
        command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        volumes: 
        - cache:/data
        networks:
            - services-network
    customer-service:
        container_name: "customer-service"
        build:
            context: .
            dockerfile: ./customer.Dockerfile
        environment: 
            - ASPNETCORE_URLS=http://0.0.0.0:30002;https://*:3002
            - ASPNETCORE_ENVIRONMENT=Production
            - DB_CONNECTION_STRING=Server=services-db;Database=customer-db;User=sa;Password=dev@1234;TrustServerCertificate=true
            - ASPNETCORE_Kestrel__Certificates__Default__Password=dev123 
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
        ports: 
            - "30002:30002"
            - "3002:3002"
        networks:
            - services-network
        depends_on: 
            - services-db
            - rabbitmq-service
            - cache-service
        volumes:
            - $USERPROFILE\.aspnet\https:/https/
    api-gateway:
        container_name: "api-gateway"
        build:
            context: .
            dockerfile: ./api-gateway.Dockerfile
        environment: 
            - ASPNETCORE_URLS=http://0.0.0.0:30001;https://*:3001
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_Kestrel__Certificates__Default__Password=dev123 
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
        ports: 
            - "30001:30001"
            - "3001:3001"
        networks:
            - services-network
        volumes:
            - $USERPROFILE\.aspnet\https:/https/
volumes:
    sqlsystem:
    sqldata:
    sqllog:
    sqlbackup:
    cache:
        driver: local
